javascript:  void function () { function SearchSessionData(Server, OsProcId, ThreadId) { var ips, resArr; if (ips = SiebelApp.S_App.NewPropertySet(), ips.SetProperty("Server", Server), ips.SetProperty("O/S Proc Id", OsProcId), ips.SetProperty("Thread Id", ThreadId), ops = SiebelApp.S_App.GetService("VIF Logs BS").InvokeMethod("SessionTaskId", ips), ops = ops.GetChildByType("ResultSet").GetChildByType("TasksList"), null == ops) return new Array(0); resArr = new Array(ops.GetChildCount()); for (var i = 0; i < ops.GetChildCount() ; i++) resArr[i] = { TaskStartTime: ops.GetChild(i).GetType(), TaskId: ops.GetChild(i).GetValue() }; return resArr } function Fill(dialog) { var sessionData, dataShower, tr, input = dialog.children()[2].value; if ($(".dataShower").each(function () { this.style.visibility = "collapse" }), input = input.split("*"), !input[0] || !input[1] || !input[2]) return void alert("All parameters are required"); switch (sessionData = SearchSessionData(input[0], input[1], input[2]), sessionData.length) { case 0: dataShower = $("span#resSpan" + id)[0], dataShower.innerHTML = "Not found data about task on server '" + input[0] + "' for session O/S Proc Id '" + input[1] + "' Thread Id '" + input[2] + "'.<br/>Is environment correct?"; break; case 1: dataShower = $("span#resSpan" + id)[0], dataShower.innerHTML = sessionData[0].TaskId; break; default: dataShower = $("table#resTable" + id)[0]; for (var i = dataShower.rows.length - 1; i > 0; i--) dataShower.deleteRow(i); for (var i = 0; i < sessionData.length; i++) tr = document.createElement("tr"), tr.innerHTML = "<td>" + sessionData[i].TaskStartTime.replace(/^(\d\d)\/(\d\d)\/(.*)/, "$2.$1.$3") + "</td><td>" + sessionData[i].TaskId + "</td>", dataShower.appendChild(tr) } dataShower.style.visibility = "visible" } var id = "Test"; if ("undefined" == typeof SiebelApp) alert("It works only in Siebel OUI session"); else { var s = '<div title="Siebel Log Data" dir = "ltr" id = "' + id + '">'; s += "<label>Data for search log identificator:</label><br />", s += '<input id = "input' + id + '" placeholder="Application Server*O/S Proc Id*Thread Id" type="text" style="width: 80%;">', s += '<button id="btnFill' + id + '">Go</button>', s += '<table class="dataShower" id="resTable' + id + '" border="1" style="width: 100%; visibility:collapse"><tr><th>Task Start Time</th><th>Task Id</th></tr></table>', s += '<span class="dataShower" id="resSpan' + id + '" style="visibility:collapse" />', s += "</div>" } var $d = $(s).dialog({ modal: !0, width: 400, open: function () { $("#" + id).focus().select() }, focus: function () { $("input#input" + id)[0].focus(), $("input#input" + id)[0].onkeypress = function () { return 13 === event.charCode ? ($("button#btnFill" + id)[0].click(), !1) : !0 }, $("button#btnFill" + id)[0].onclick = function () { Fill($d) } }, close: function () { $(this).dialog("destroy").remove() }, buttons: [{ text: "Close", click: function () { $(this).dialog("close") } }] }) }();
